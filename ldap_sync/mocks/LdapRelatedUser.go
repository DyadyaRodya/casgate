// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// LdapRelatedUser is an autogenerated mock type for the LdapRelatedUser type
type LdapRelatedUser struct {
	mock.Mock
}

type LdapRelatedUser_Expecter struct {
	mock *mock.Mock
}

func (_m *LdapRelatedUser) EXPECT() *LdapRelatedUser_Expecter {
	return &LdapRelatedUser_Expecter{mock: &_m.Mock}
}

// GetFieldByLdapAttribute provides a mock function with given fields: _a0
func (_m *LdapRelatedUser) GetFieldByLdapAttribute(_a0 string) string {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetFieldByLdapAttribute")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// LdapRelatedUser_GetFieldByLdapAttribute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFieldByLdapAttribute'
type LdapRelatedUser_GetFieldByLdapAttribute_Call struct {
	*mock.Call
}

// GetFieldByLdapAttribute is a helper method to define mock.On call
//   - _a0 string
func (_e *LdapRelatedUser_Expecter) GetFieldByLdapAttribute(_a0 interface{}) *LdapRelatedUser_GetFieldByLdapAttribute_Call {
	return &LdapRelatedUser_GetFieldByLdapAttribute_Call{Call: _e.mock.On("GetFieldByLdapAttribute", _a0)}
}

func (_c *LdapRelatedUser_GetFieldByLdapAttribute_Call) Run(run func(_a0 string)) *LdapRelatedUser_GetFieldByLdapAttribute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *LdapRelatedUser_GetFieldByLdapAttribute_Call) Return(_a0 string) *LdapRelatedUser_GetFieldByLdapAttribute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *LdapRelatedUser_GetFieldByLdapAttribute_Call) RunAndReturn(run func(string) string) *LdapRelatedUser_GetFieldByLdapAttribute_Call {
	_c.Call.Return(run)
	return _c
}

// GetName provides a mock function with given fields:
func (_m *LdapRelatedUser) GetName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// LdapRelatedUser_GetName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetName'
type LdapRelatedUser_GetName_Call struct {
	*mock.Call
}

// GetName is a helper method to define mock.On call
func (_e *LdapRelatedUser_Expecter) GetName() *LdapRelatedUser_GetName_Call {
	return &LdapRelatedUser_GetName_Call{Call: _e.mock.On("GetName")}
}

func (_c *LdapRelatedUser_GetName_Call) Run(run func()) *LdapRelatedUser_GetName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *LdapRelatedUser_GetName_Call) Return(_a0 string) *LdapRelatedUser_GetName_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *LdapRelatedUser_GetName_Call) RunAndReturn(run func() string) *LdapRelatedUser_GetName_Call {
	_c.Call.Return(run)
	return _c
}

// GetUserField provides a mock function with given fields: userField
func (_m *LdapRelatedUser) GetUserField(userField string) string {
	ret := _m.Called(userField)

	if len(ret) == 0 {
		panic("no return value specified for GetUserField")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(userField)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// LdapRelatedUser_GetUserField_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUserField'
type LdapRelatedUser_GetUserField_Call struct {
	*mock.Call
}

// GetUserField is a helper method to define mock.On call
//   - userField string
func (_e *LdapRelatedUser_Expecter) GetUserField(userField interface{}) *LdapRelatedUser_GetUserField_Call {
	return &LdapRelatedUser_GetUserField_Call{Call: _e.mock.On("GetUserField", userField)}
}

func (_c *LdapRelatedUser_GetUserField_Call) Run(run func(userField string)) *LdapRelatedUser_GetUserField_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *LdapRelatedUser_GetUserField_Call) Return(_a0 string) *LdapRelatedUser_GetUserField_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *LdapRelatedUser_GetUserField_Call) RunAndReturn(run func(string) string) *LdapRelatedUser_GetUserField_Call {
	_c.Call.Return(run)
	return _c
}

// NewLdapRelatedUser creates a new instance of LdapRelatedUser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLdapRelatedUser(t interface {
	mock.TestingT
	Cleanup(func())
}) *LdapRelatedUser {
	mock := &LdapRelatedUser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
